name: test-and-deploy-java

on:
  push:
    branches:
      - main

jobs:

  test:
    name: Ejecutar pruebas Java
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v4

      - name: Configurar entorno Java
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Compilar y ejecutar pruebas
        run: |
          cd api-user-management
          mvn test

  deploy:
    name: Desplegar a EC2
    needs: test   # ⬅️ Solo se ejecuta si el job "test" fue exitoso
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v4

      - name: Crear carpeta en el servidor AWS
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.IP_SERVER }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            mkdir -p /home/ubuntu/app

      - name: Sincronizar archivos con el servidor
        uses: burnett01/rsync-deployments@7.0.2
        with:
          switches: "-avz --delete"
          path: "./"
          remote_host: ${{ secrets.IP_SERVER }}
          remote_user: ${{ secrets.USERNAME }}
          remote_path: "/home/ubuntu/app/"
          remote_key: ${{ secrets.PRIVATE_KEY }}
          remote_port: ${{ secrets.PORT }}

      - name: Crear archivo .env en EC2
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.IP_SERVER }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.DB_PORT }}
          script: |
            cat <<EOF > /home/ubuntu/app/api-user-management/.env
            DB_ENDPOINT=${{ secrets.DB_ENDPOINT }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_NAME=${{ secrets.DB_NAME }}
            EOF

      - name: Levantar docker-compose
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.IP_SERVER }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd /home/ubuntu/app/api-user-management
            sudo docker compose down
            sudo docker compose up -d --build
